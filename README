hack-functions

1. O que é
2. Requisitos
3. Instalação
4. Documentação
5. ChangeLog
6. Bugs


1. O que é

 O hack-functions nada mais é do que um conjunto de funções
 em bash (GPL) que podem ser interessantes para programadores,
 analistas de segurança e usuários em geral que comumente
 efetuem operações em baixo nível.

 Não há, de fato, nada novo neste conjunto de funções pois todas
 elas são feitas usando os softwares existentes na maioria das
 distribuições GNU/Linux. O que você ganha usando este script é
 produtividade, pois digitará comandos bem curtos para fazer
 operações que exigiriam longas linhas.

 !!! IMPORTANTE !!!
 Praticamente não há tratamento de erro nas funções. Isso fica
 a cargo do próprio bash, dos programas utilizados e da sua
 responsabilidade. :)


2. Requisitos

 Para o funcionamento de todas as funções, é esperado que você tenha:

 linux (não testo em outros sistemas)
 bash >= 4
 bc
 wget (e acesso à internet)
 hexdump
 grep
 objdump
 base64
 md5sum
 cut
 gdb
 rev
 html2text
 tee
 udcli e udis86 (sc2asm)
 nasm (asm2sc)
 iw 
 awk

3. Instalação
 
 Após baixar o arquivo hack-functions.sh, basta colocá-lo num diretório
 qualquer e adicioná-lo ao seu .bashrc, por exemplo:

 $ sudo mv hack-functions.sh /opt
 $ echo "source /opt/hack-functions.sh" >> $HOME/.bashrc
 $ source /opt/hack-functions.sh

 A partir deste momento, todas as funções devem estar disponíveis para uso.

 Adicionalmente, você deve instalar a libudis86 para usar a função sc2asm, para
 isso faça download da última versão da biblioteca em
 http://udis86.sourceforge.net e comande:

 $ tar xf udis86-*.tar.gz
 $ cd udis86-*
 $ ./configure
 $ make
 # make install
 $ cd udcli
 $ make
 # make install

4. Documentação

 O Guia de Referência encontra-se online em
 http://www.mentebinaria.com.br/files/hf-referencia.html


5. ChangeLog

 hack-functions 1.5 - ?
  + função nova: asminfo() - busca informações sobre uma instrução Assembly x86 (Intel).
  + uso de cache em $HOME/.hf/cache para agilizar comandos repetidos.
  + função nova: dumpheap() - dump o conteúdo da heap de um processo para um arquivo.
  + função nova: dumpstack() - extrai o conteúdo da stack de um processo para um arquivo.
  + função nova: str2hexr() - converte string para bytes hexa invertidos.
  + função nova: asm2sc() - cria um payload/shellcode a partir de instruções Assembly.
  + função nova: sc2asm() - remonta um payload/shellcode para o código em Assembly original.

 hack-functions 1.4 - 27/2/2012
  + função nova: charcalc() - faz cálculo com caracteres.
  + função nova: intel() - configuração para sintaxe Intel.
  + função nova: rotall() - vários ROTs de uma vez numa string
    (obrigado @laerciomasalla pela sugestão).
  + criado o guia de referência das funções em hf-referencia.html.
  * hexcalc() agora suporta as 4 operações básicas e o resultado é prefixado com '0x'.
  * str2hex() e hex2str() agora suportam prefixos '0x', '\x', com ou sem espaços
    e notação de array de bytes em C.

 hack-functions 1.2 - 24/2/2012
  - troca do curl pelo wget na função unmd5().
  - otimização de código em todas as funções.
  - adicionadas as funções bin2dec() e asc2hex().
  - adicionadas configurações de gdb e objdump para sintaxe Intel.

 hack-functions 1.0 - 24/2/2012
  - primeira versão com 20 funções. 


6. Bugs

 Ao encontrar um bug, entre em contato com fernando@mentebinaria.com.br ou
 submeta o patch no github. Vai ajudar bastante. :)
